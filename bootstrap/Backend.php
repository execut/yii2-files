<?php
/**
 */

namespace execut\files\bootstrap;


use execut\crud\Bootstrap;
use execut\files\models\File;
use execut\navigation\Component;
use execut\crud\navigation\Configurator;
use yii\helpers\ArrayHelper;
use yii\i18n\PhpMessageSource;

class Backend extends Common
{
    public $isBootstrapI18n = true;
    public function getDefaultDepends()
    {
        return ArrayHelper::merge(parent::getDefaultDepends(), [
            'bootstrap' => [
                'crud' => [
                    'class' => Bootstrap::class,
                ],
            ],
        ]); // TODO: Change the autogenerated stub
    }

    /**
     * @param \yii\base\Application $app
     */
    public function bootstrap($app)
    {
        parent::bootstrap($app);
        $app->on(\yii\base\Application::EVENT_BEFORE_REQUEST, function () use ($app) {
            $this->bootstrapNavigation($app);
        });
    }

    /**
     * @param $app
     */
    protected function bootstrapNavigation($app)
    {
        $module = $app->getModule($this->moduleId);
        if (!(!$app->user->isGuest && $module->adminRole === '@') && !$app->user->can($module->adminRole)) {
            return;
        }

        /**
         * @var Component $navigation
         */
        $navigation = $app->navigation;
        $modelClass = $app->getModule($this->moduleId)->modelClass;
        $navigation->addConfigurator([
            'class' => Configurator::class,
            'module' => $this->moduleId,
            'moduleName' => 'Files',
            'modelName' => $modelClass::MODEL_NAME,
            'controller' => 'backend',
        ]);
    }
}